#!/usr/bin/env python

import curses
import pygame
import time
import os
import sys
import string
import platform
from datetime import datetime

# Determine the appropriate Dropbox folder location based on the operating system
system = platform.system()
if system == "Windows":
    data_dir = user_data_dir("Dropbox", "Dropbox")
elif system == "Darwin":
    data_dir = os.path.expanduser("~/Dropbox")
elif system == "Linux":
    data_dir = os.path.expanduser("~/Dropbox")

journal_file = os.path.join(data_dir, "journal/journal.txt")

# initialize pygame mixer for sound
pygame.mixer.init()

# load sounds
script_dir = os.path.dirname(os.path.realpath(__file__))
click_sound = pygame.mixer.Sound(os.path.join(script_dir, "click.wav"))
beep_sound = pygame.mixer.Sound(os.path.join(script_dir, "beep.wav"))

def main(stdscr):
    curses.cbreak()
    stdscr.keypad(True)
    stdscr.scrollok(True)
    stdscr.nodelay(True)

    max_y, max_x = stdscr.getmaxyx()  # Get screen dimensions

    input_string = ""

    try:
       last_input_time = os.path.getmtime(journal_file)
    except FileNotFoundError:
        last_input_time = time.time()

    while True:
        ch = stdscr.getch()
        y, x = stdscr.getyx()  # Get current cursor position directly

        # autosave
        if time.time() - last_input_time > 10 and input_string:
            with open(journal_file, "a") as f:
                f.write(input_string)
            input_string = ""
            beep_sound.play()

        if ch == -1:
            continue
        if ch == curses.KEY_ENTER or ch == 10 or ch == 13:
            if y == max_y - 1:  # If cursor is on the last line
                stdscr.scroll(1)  # Scroll screen by one line
            else:
                stdscr.addstr('\n')
            input_string += '\n'  # Ensure a newline character is added to input_string
            
            with open(journal_file, "a") as f:
                f.write(input_string)
            beep_sound.play()
            input_string = ""

        elif ch == 4:  # Ctrl+D
            if input_string:
                with open(journal_file, "a") as f:
                    f.write(input_string)
            break
        else:
            if chr(ch) in string.printable:
                if y == max_y - 1 and x == max_x - 1:  # If cursor is at the bottom-right corner
                    stdscr.scroll(1)  # Scroll screen by one line
                    y -= 1  # Move the y cursor position up by one line
                    stdscr.move(y, x)  # Update the cursor position

                if time.time() - last_input_time > 180:
                    header_str = "\n"*3 + "-"*5 + str(datetime.now()) + "-"*5 + "\n"
                    stdscr.addstr(header_str)
                    input_string += header_str

                input_string += chr(ch)
                stdscr.addstr(chr(ch))
                click_sound.play()

                last_input_time = time.time()

if __name__ == "__main__":
    curses.wrapper(main)
