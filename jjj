#!/usr/bin/env python3

import curses
import pygame
import time
import os
import sys
import string
import platform
from datetime import datetime


# Determine the appropriate Dropbox folder location based on the operating system
system = platform.system()
if system == "Windows":
    data_dir = user_data_dir("Dropbox", "Dropbox")
elif system == "Darwin":
    data_dir = os.path.expanduser("~/Dropbox")
elif system == "Linux":
    data_dir = os.path.expanduser("~/Dropbox")
# Set the filename for the journal file
journal_file = os.path.join(data_dir, "journal.txt")

# initialize pygame mixer for sound
pygame.mixer.init()


# load sounds
# get the directory that this script is in
script_dir = os.path.dirname(os.path.realpath(__file__))
click_sound = pygame.mixer.Sound(os.path.join(script_dir, "click.wav"))
beep_sound = pygame.mixer.Sound(os.path.join(script_dir, "beep.wav"))

def main(stdscr):
    # init screen
    curses.cbreak()
    stdscr.keypad(True)
    stdscr.nodelay(True)

    # store the text input
    input_string = ""

    # store the time of the last input
    try:
       last_input_time = os.path.getmtime(journal_file)
    except FileNotFoundError:
        # If the file doesn't exist yet, use the current time
        last_input_time = time.time()

    while True:
        # get character
        ch = stdscr.getch()

        # autosave
        if time.time() - last_input_time > 10 and input_string:
            # save the file
            with open(journal_file, "a") as f:
                f.write(input_string)
            # clear the input string
            input_string = ""
            beep_sound.play()

        if ch == -1:
            time.sleep(0.01)
            continue

        if ch == curses.KEY_ENTER or ch == 10 or ch == 13:
            # save on enter

            # add newline to string
            input_string += '\n'
            stdscr.addstr('\n')
            # play beep
            # save the file
            with open(journal_file, "a") as f:
                f.write(input_string)
            beep_sound.play()
            # clear the input string
            input_string = ""
        elif ch == 4:  # Ctrl+D
            # save and exit
            if input_string:
                with open(journal_file, "a") as f:
                    f.write(input_string)
            break
        else:
            # check if character is printable
            if chr(ch) in string.printable:
                # check if 3 minutes have passed without input
                if time.time() - last_input_time > 180:
                    header_str = "\n"*3 + str(datetime.now()) + "\n"
                    stdscr.addstr(header_str)
                    input_string += header_str
                # add character to string
                input_string += chr(ch)
                stdscr.addstr(chr(ch))
                # play click
                click_sound.play()

                # update the last input time
                last_input_time = time.time()

        # prevent sound overlap
        time.sleep(0.1)

if __name__ == "__main__":
    curses.wrapper(main)
